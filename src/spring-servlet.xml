<?xml version="1.0" encoding="UTF-8"?>
<!--看到下面的beans这个元素标签没有，必须有标签的声明-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
	        http://www.springframework.org/schema/beans
	        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		    http://www.springframework.org/schema/context
		    http://www.springframework.org/schema/context/spring-context-3.1.xsd
		    http://www.springframework.org/schema/mvc
		    http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">
		
		<!-- 这个文件仅仅是对请求做处理的配置 -->
	
	<!--
		spring mvc的controller使用注解 , 在xml配置了这个标签后，
		spring可以自动去扫描base-pack下面或者子包下面的java文件，如果扫描到有@Component
		@Controller@Service等这些注解的类，则把这些类注册为bean
	-->
	<context:component-scan base-package="com.fuwei.controller,com.fuwei.commons" />
	
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"
		lazy-init="false">
		<property name="messageConverters">
			<list>  
            <!-- 把ByteArray加在Json前面  -->
				<bean
					class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
            
			<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
				<bean id="mappingJacksonHttpMessageConverter"
					class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/html;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>

	<!-- 视图解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/pages/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 另外最好还要加入DefaultAnnotationHandlerMapping，不然会被 XML或其它的映射覆盖！ -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
		
	<!-- 文件上传 -->
	<!--  -->
	
	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop
					key="org.springframework.dao.DataAccessException">
					dataAccessFailure
				</prop>
			</props>
		</property>
	</bean>

	<bean id="filenameController"
		class="org.springframework.web.servlet.mvc.UrlFilenameViewController" />

	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="ApplicationResources" />
		<property name="useCodeAsDefaultMessage" value="true" />
	</bean>

	<!-- 方法名解析器 -->
	<bean id="InternalPathMethodNameResolver"
		class="org.springframework.web.servlet.mvc.multiaction.InternalPathMethodNameResolver" />

	<bean
		class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping">
		<property name="order" value="1" />
	</bean>

   <mvc:resources mapping="/services/**" location="/services/" cache-period="31556926"/>
   <mvc:resources mapping="/gis/**" location="/gis/" cache-period="31556926"/>
   <mvc:resources mapping="/WebConfig/**" location="/WebConfig/" cache-period="31556926"/>
   <mvc:resources mapping="/dowload/**" location="/dowload/" cache-period="31556926"/>
   <mvc:resources mapping="/Splash/**" location="/Splash/" cache-period="31556926"/>
   <mvc:resources mapping="/ztree/**" location="/ztree/" cache-period="31556926"/>
   
   <mvc:annotation-driven>  
        <mvc:message-converters>  
            <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">  
                <property name="objectMapper" ref="customObjectMapper"></property>  
            </bean>  
        </mvc:message-converters>  
    </mvc:annotation-driven>  
   <bean id="customObjectMapper" class="com.fuwei.commons.CustomObjectMapper"></bean> 
</beans>